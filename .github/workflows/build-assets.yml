name: 'Build Assets for Draft Release'

# This workflow can be manually triggered to build and attach assets to existing draft releases
on:
  workflow_dispatch:
    inputs:
      release_identifier:
        description: 'Release tag or name (e.g., v0.4.0)'
        required: true
        type: string
      
jobs:
  check-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      release_id: ${{ steps.check_release.outputs.release_id }}
      tag_name: ${{ steps.check_release.outputs.tag_name }}
    steps:
      - name: Find draft release
        id: check_release
        run: |
          echo "Looking for draft release: ${{ inputs.release_identifier }}"
          
          # Find matching draft release
          RELEASE_INFO=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases" | \
            jq -r '.[] | select(.draft == true and (.name == "${{ inputs.release_identifier }}" or .tag_name == "${{ inputs.release_identifier }}")) | @json' | head -n1)
          
          if [ -n "$RELEASE_INFO" ]; then
            echo "✅ Found draft release"
            echo "release_id=$(echo "$RELEASE_INFO" | jq -r '.id')" >> $GITHUB_OUTPUT
            echo "tag_name=$(echo "$RELEASE_INFO" | jq -r '.tag_name')" >> $GITHUB_OUTPUT
          else
            echo "❌ Draft release not found: ${{ inputs.release_identifier }}"
            echo "Available draft releases:"
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases" | \
              jq -r '.[] | select(.draft == true) | "  - \(.name) (\(.tag_name))"'
            exit 1
          fi

  build-assets:
    needs: check-release
    permissions:
      contents: write
    uses: ./.github/workflows/build-tauri.yml
    with:
      tag_name: ${{ needs.check-release.outputs.tag_name }}
      release_id: ${{ needs.check-release.outputs.release_id }}
    secrets: inherit

  summary:
    needs: [check-release, build-assets]
    runs-on: ubuntu-latest
    steps:
      - name: Build summary
        run: |
          echo "## ✅ Assets Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Assets have been built and attached to draft release **${{ inputs.release_identifier }}**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Draft Release](https://github.com/${{ github.repository }}/releases/tag/${{ needs.check-release.outputs.tag_name }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "You can now review and publish the release when ready!" >> $GITHUB_STEP_SUMMARY
